        -:    0:Source:Test_Piece.cpp
        -:    0:Graph:Test_Piece.gcno
        -:    0:Data:Test_Piece.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../Headers/Test_Piece.hpp"
        -:    2:
        -:    3:const bool Test_Piece::FALHA = false;
        -:    4:const bool Test_Piece::SUCESSO = true;
        -:    5:
        1:    6:void Test_Piece::makePiece(void)
        -:    7:{
        -:    8:    try
        -:    9:    {
        1:   10:        piece = new Piece();
        1:   11:        if (piece == NULL)
    #####:   12:            estado = FALHA;
        -:   13:    }
    =====:   14:    catch (invalid_argument excecao)
        -:   15:    {
    =====:   16:        estado = FALHA;
        -:   17:    }
        1:   18:}
        -:   19:
        1:   20:void Test_Piece::destroyPiece(void)
        -:   21:{
        -:   22:    try
        -:   23:    {
        1:   24:        delete piece;
        1:   25:        if (piece != NULL)
        1:   26:            estado = FALHA;
        -:   27:    }
        -:   28:    catch (invalid_argument excecao)
        -:   29:    {
        -:   30:        estado = FALHA;
        -:   31:    }
        1:   32:}
        -:   33:
        1:   34:bool Test_Piece::run(void)
        -:   35:{
        1:   36:    estado = SUCESSO;
        -:   37:
        1:   38:    makePiece();
        1:   39:    destroyPiece();
        -:   40:
        1:   41:    return estado;
        3:   42:}
