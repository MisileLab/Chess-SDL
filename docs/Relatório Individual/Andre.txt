Defini melhor quais serão os métodos da classe das peças (e as propriedades), fiz o corpo da classe de cada peça, implementei um teste básico dos métodos genéricos da classe genérica de peça.

Data: 16/06
Hora de trabalho: 13:00 - 14:11

Ajuste das mudanças para o novo formato da master

Data: 20/06
Hora de trabalho: 16:00 - 16:24

Inicio da implementação dos métodos básicos das peças + criação de classes individuais

Data: 28/06
Hora de trabalho: 20:12 - 21:53

Método de verificação de validade de movimento para o Peão e os testes

Data: 29/06
Hora de trabalho: 14:50 - 16:09  ~  16:25 - 17:17

Método para setar o movimento feito na Peça Peão

Data: 29/06
Hora de trabalho: 17:26 - 17:45

Método de verificação de validade de movimento e setar movimento para o Bispo e os testes

Data: 30/06
Hora de trabalho: 9:53 - 10:38

Método de verificação de validade de movimento e setar movimento para a Torre e os testes

Data: 30/06
Hora de trabalho: 10:45 - 11:06

Método de verificação de validade de movimento e setar movimento para o Cavalo e os testes

Data: 30/06
Hora de trabalho: 11:12 - 11:33

Método de verificação de validade de movimento e setar movimento para a Rainha e os testes

Data: 30/06
Hora de trabalho: 14:16 - 14:40

Método de verificação de validade de movimento e setar movimento para o Rei e os testes

Data: 30/06
Hora de trabalho: 14:41 - 14:56

Método de verificação e para setar se a peça está viva

Data: 30/06
Hora de trabalho: 15:34 - 16:08

Refactoring do metodo SetIsAlive para SetDead

Data: 30/06
Hora de trabalho: 19:20 - 19:25

Refactoring da posição das peças do Peão (pretas em cima e brancas embaixo) - antes era o contrário

Data: 01/07
Hora de trabalho: 09:48 - 10:15

Metodo de verificação de caminho não livre da classe States

Data: 01/07
Hora de trabalho: 17:30  - 20:40 ~ 22:00 - 1:30

Metodo de verificação de caminho não livre da classe States

Data: 02/07
Hora de trabalho: 9:05 - 10:14

Metodo de verificação de casa não livre da classe States (casa final da jogada)

Data: 02/07
Hora de trabalho: 10:14 - 10:49

Refactoring - Mais testes nas funções IsInTheWay e IsInTheSpot

Data: 02/07
Hora de trabalho: 22:00 - 22:28

Feita uma nova função na classe States, que checa se o rei está em cheque

Data: 02/07
Hora de trabalho: 22:00 - 23:43

Refactoring de nome de funções e argumentos de funções, dois novos metodos na classe States (MovePiece e EatPiece)

Data: 02/07 - 03/07
Hora de trabalho: 23:43 - 01:04

Refactoring da função IsCheck e das funções isMovementPossible (sendo o movimento agora possivel apenas se a peça estiver viva)

Data: 03/07
Hora de trabalho: 9:18 - 9:38

Nova função 'CheckPawnDiagonals' para checar se tem algum inimigo nas diagonais do peao e setar a flag e Refactoring da 'MovePiece'

Data: 03/07
Hora de trabalho: 9:38 - 11:11

Refactoring da função 'CheckPawnDiagonals', 'IsCheck', novos metodos: 'IsCheckMate', 'WhoWon', 'IsPositionValid', refactoring de testes e aumento de testes.

Data: 03/07
Hora de trabalho: 17:52 - 21:06

Refactoring da função 'IsPositionValid'

Data: 04/07
Hora de trabalho: 13:40 - 13:47

Refactoring de todas as funções, arrumando a ordem dos argumentos para algo mais lógico

Data: 04/07
Hora de trabalho: 13:47 - 13:57

Novos metodos (Get e Set) para as peças

Data: 04/07
Hora de trabalho: 14:05 - 14:37

Refactoring da classe States

Data: 04/07
Hora de trabalho: 14:50 - 15:10

Inicio da jogada automatica pelo pc

Data: 05/07
Hora de trabalho: 13:39 - 14:22


Continuação da jogada automatica (metodos 'UpdateBestMoves' e 'PlayBestMoves')

Data: 05/07
Hora de trabalho: 21:08 - 23:16

Refactoring 'IsPositionValid' + metodo de jogar para testes na Main

Data: 06/07
Hora de trabalho: 13:50 - 14:40  ~  17:50 ~ 18:00

Implementar variavel e estado de quem é a vez de jogar (branca ou preta)

Data: 07/07
Hora de trabalho: 13:03 - 13:18

Implementação da função de salvar 'SaveGame'

Data: 07/07
Hora de trabalho: 14:42 - 16:28

Refactoring das Funções de Load e de Save do jogo

Data: 08/07
Hora de trabalho: 9:51 - 10:17

Arrumado o render das possíveis jogadas (UI)

Data: 08/07
Hora de trabalho: 10:45 - 10:50


Metodo 'GetPieceBestMove' para pegar o melhor movimento da peça

Data: 08/07
Hora de trabalho: 10:50 - 11:10

Metodo 'GetPieceTurn' para saber de quem é a jogada

Data: 08/07
Hora de trabalho: 11:50 - 11:56

Transformar o Peão em Rainha quando ele chega na ultima casa do adversário

Data: 08/07
Hora de trabalho: 11:58 - 12:31

Pequeno refactoring em 'GetPiece'

Data: 08/07
Hora de trabalho: 18:00 - 18:04

Arrumada a função do Load (novo metodo 'WakeFromDead') e feito função para matar todas as peças do vetor e reviver elas também

Data: 08/07
Hora de trabalho: 20:38 - 20:48

