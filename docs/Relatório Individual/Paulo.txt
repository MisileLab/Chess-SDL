Deixei o framework catch funcional com um exemplo de teste pronto, configurei o doxygen e automatizei a criação do relatório do gcov                                                                                                    

Date: 13/06
Hora de trabalho: 21:00 - 23:30

Fiz algumas alterações no makefile e criei uma função de teste

Data: 17/06
Hora de trabalho 11:30 a 12:11

Comecei a estudar SDL e criar a interface gráfica, fiz as configuraçoes iniciais, criei a classe Graphics para manipular as configuracoes do SDL.
As funcoes criadas foram init e loadMedia e close

Data 03/07
Hora de trabalho 11:06 a 13:52

Criei a classe Texture para manipular as imagens do programa com as funcoes loadFromFile, render e free.

Data 03/07
Hora de trabalho 14:21 a 17:10

Criei uma funcao para criar uma textura a partir de um texto e uma fonte.

Data 03/07
Hora de trabalho 18:26 a 19:02

Modularizei as classes criadas para a interface. Ainda tem dependencias de variaveis globais e uso de extern, pretendo mudar isso

Data 03/07
Hora de trabalho 19:30 a 19:51 

Criei os sprites para o menu principal no gimp
Data 06/07
Hora de trabalho 18:43 a 19:38


Fiz os recursos da interface para cortar blocos do spritesheet criado no gimp e carregar no programa e criei o menu principal,
tive alguns problemas com a modularização prévia e tive um pouco de retrabalho.
Data 06/07
Hora de trabalho 20:15 as 23:40

Fiz a máquina de estados para o menu principal, agora a transição de estados está 100%. Modularizei, consertei conflitos, etc.
Data 07/07
9 da manhã até o final do dia

Player vs player funcionado, implementei o GUIBoard que se comunica com a interface gráfica do tabuleiro e alterei o GameState
Data 08/07
1:00 às 5:00 da madrugada

implementando detalhes como casas possiveis de se jogar e tela de end game.
Data 08/07
10:00 as 14:00

implementando a melhor jogada possivel na interface apertando b
Data 08/07
14:30 as 15:10

Terminei os modos de jogador vs jogador e jogador vs cpu
16:34 às 19:19

